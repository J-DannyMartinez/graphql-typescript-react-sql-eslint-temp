{"id":"node_modules/apollo-server-core/dist/internalPlugin.js","dependencies":[{"name":"/home/terminator_t800/Development/Javascript/playground/relx_test/server/node_modules/apollo-server-core/dist/internalPlugin.js.map","includedInParent":true,"mtime":1629158426645},{"name":"/home/terminator_t800/Development/Javascript/playground/relx_test/server/node_modules/apollo-server-core/src/internalPlugin.ts","includedInParent":true,"mtime":1629158426802},{"name":"/home/terminator_t800/Development/Javascript/playground/relx_test/server/package.json","includedInParent":true,"mtime":1629508268358},{"name":"/home/terminator_t800/Development/Javascript/playground/relx_test/server/node_modules/apollo-server-core/package.json","includedInParent":true,"mtime":1629158426539}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.pluginIsInternal = void 0;\n\nfunction pluginIsInternal(plugin) {\n  return '__internal_plugin_id__' in plugin;\n}\n\nexports.pluginIsInternal = pluginIsInternal;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":8,"column":0}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":16},"generated":{"line":8,"column":9}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":8,"column":25}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":27,"column":2},"generated":{"line":8,"column":26}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":8,"column":32}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":27,"column":28},"generated":{"line":8,"column":34}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":9,"column":0}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":31,"column":9},"generated":{"line":9,"column":9}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":31,"column":37},"generated":{"line":9,"column":37}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":31,"column":2},"generated":{"line":9,"column":43}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":32,"column":1},"generated":{"line":10,"column":0}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":12,"column":0}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":12,"column":7}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":12,"column":8}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":12,"column":24}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":12,"column":27}},{"source":"../src/internalPlugin.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":12,"column":43}}],"sources":{"../src/internalPlugin.ts":"import type { BaseContext } from 'apollo-server-types';\nimport type { ApolloServerPlugin } from 'apollo-server-plugin-base';\n\n// This file's exports should not be exported from the overall\n// apollo-server-core module.\n\n// The internal plugins implement this interface which\n// ApolloServer.ensurePluginInstantiation uses to figure out if the plugins have\n// already been installed (or explicitly disabled via the matching Disable\n// plugins).\nexport interface InternalApolloServerPlugin<\n  TContext extends BaseContext = BaseContext,\n> extends ApolloServerPlugin<TContext> {\n  // Used to identify a few specific plugins that are instantiated\n  // by default if not explicitly used or disabled.\n  __internal_plugin_id__(): InternalPluginId;\n}\n\nexport type InternalPluginId =\n  | 'CacheControl'\n  | 'LandingPageDisabled'\n  | 'SchemaReporting'\n  | 'InlineTrace'\n  | 'UsageReporting';\n\nexport function pluginIsInternal(\n  plugin: ApolloServerPlugin,\n): plugin is InternalApolloServerPlugin {\n  // We could call the function and compare it to the list above, but this seems\n  // good enough.\n  return '__internal_plugin_id__' in plugin;\n}\n"},"lineCount":null}},"error":null,"hash":"18766013b77b6e0eb5586fc478073922","cacheData":{"env":{}}}